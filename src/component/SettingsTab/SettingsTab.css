#root {
    --color1: #222831;
    --color2: #393e46;
    --color3: #00adb5;
    --color4: #eeeeee;
    --width: min(30rem, 75vw);
}

#SettingsButton {
    width: calc(var(--width) / 10);

    position: absolute;
    right: var(--width);
    top: 50vh;

    transform: translate(0.1vw, -50%);
    transition: right 1s;
}

#SettingsButton.hidden {
    right: 0;
}

#SettingsButton .arrow {
    stroke: var(--color3);
    transform-origin: 50% 50%;
    transition: transform 1s;
}

#SettingsButton.hidden .arrow {
    transform: rotate(180deg);
}

#SettingsButton .background {
    fill: var(--color1);
}

#SettingsButton:hover .background {
    fill: var(--color2);
}

#SettingsDiv {
    height: 100vh;
    width: var(--width);
    padding: calc(var(--width) / 40);

    position: absolute;
    top: 0px;
    right: 0px;

    background: var(--color1);
    border-top-left-radius: calc(var(--width) / 20);
    border-bottom-left-radius: calc(var(--width) / 20);

    transition: all 1s;
    visibility: visible;
    overflow-y: scroll;
}

#SettingsDiv.hidden {
    visibility: hidden;
    right: calc(var(--width) * -1);
}

.setting {
    height: calc(var(--width) / 10);
    width: 100%;
    padding: 0px calc(var(--width) / 80) 0px calc(var(--width) / 80);
    margin-bottom: calc(var(--width) / 40);

    background: var(--color3);
    border-radius: calc(var(--width) / 40);

    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
}

.settingTitle {
    height: 100%;
    width: fit-content;
    margin-right: calc(var(--width) / 50);

    color: var(--color1);
    font-weight: bold;
    font-size: calc(var(--width) / 20);
    white-space: nowrap;

    display: flex;
    align-items: center;
}

.settingRange {
    -webkit-appearance: none;
    appearance: none;
    padding: 0px calc(var(--width) / 400) 0px calc(var(--width) / 400);

    width: 100%;
    height: 50%;
    border: calc(var(--width) / 300) solid var(--color1);

    background: var(--color1);
    border-radius: var(--width);
    overflow: hidden;
}

.settingRange:disabled {
    filter: brightness(0.75);
}

.settingRange::-webkit-slider-thumb {
    -webkit-appearance: none;
    appearance: none;
    cursor: pointer;

    height: calc(var(--width) / 25);
    aspect-ratio: 1;

    background: var(--color2);
    border-radius: 100%;
    box-shadow: 0 0 0 calc(var(--width) / 400) var(--color4),
        -100vw 0 0 calc(100vw - var(--width) / 60) var(--color4);
}

.settingRange:disabled::-webkit-slider-thumb {
    cursor: auto;
}

.settingCheckbox {
    height: 100%;
    margin-left: calc(var(--width) / 50);
}

.settingCheckbox .check {
    stroke: var(--color1);
}

.settingCheckbox .box {
    stroke: var(--color1);
    fill: var(--color4);
}

/*   COLOR GRADIENT   */

.setting {
    height: calc(var(--width) / 10);
    width: 100%;
    padding: 0px calc(var(--width) / 80) 0px calc(var(--width) / 80);
    margin-bottom: calc(var(--width) / 40);

    background: var(--color3);
    border-radius: calc(var(--width) / 40);

    display: flex;
    flex-direction: row;
    align-items: center;
    justify-content: space-between;
}

.colorGradientPicker {
    padding: calc(var(--width) / 40);
    border-radius: calc(var(--width) / 40);
    background: var(--color2);
    border: 1px solid black;

    position: absolute;
    top: 100%;
    transform: translate(-50%, 0);
}

.colorGradientPicker .react-colorful__saturation {
    margin-top: calc(var(--width) / 40);
    border-radius: calc(var(--width) / 80);
}

.colorGradientPicker .react-colorful__hue {
    order: -1;
}

.colorGradientPicker .react-colorful__hue,
.colorGradientPicker .react-colorful__alpha {
    height: calc(var(--width) / 30);
    border-radius: calc(var(--width) / 80);
}

.colorGradientPicker .react-colorful__hue-pointer,
.colorGradientPicker .react-colorful__saturation-pointer,
.colorGradientThumb {
    width: auto;
    aspect-ratio: 1;

    border: 2px solid white;
    border-radius: 100%;
}

.colorGradientThumb {
    height: 100%;
    position: absolute;
    top: 50%;
    transform: translate(-50%, -50%);
}

.colorGradientPicker .react-colorful__hue-pointer {
    height: 100%;
}

.colorGradientPicker .react-colorful__saturation-pointer {
    height: calc(var(--width) / 25);
}
